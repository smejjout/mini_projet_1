#!/usr/bin/env python3

# Management of public transit tickets
# Modeling a ticket buying system

def main_buying(vehicle: str,
                age: int,
                class_nb: int = 0,
                is_one_way: bool = True) -> float:
    """Main function managing the input and redirecting to the sub-function
    Parameters
    ----------
    vehicle: Type of transport, either "bus", "train", or "subway" (str)

    age: Age of the passenger (int)

    class_nb: In the case of train transportation, you have to specify the class, either 1 or 2
        Defaults to 0 which means it's irrelevant (e.g. in a bus) (int)

    is_one_way: Whether the ticket is a one way ticket or include the return trip
        Defaults to True (bool)

    Returns
    -------
    The money you'll have to pay in [€] (float)
    """
    # check the vehicle and redirect to sub-function
    # return the result

    pass


def train(age: str,
          class_nb: int,
          is_one_way: bool) -> float:
    """Sub-function managing train tickets
    Parameters
    ----------
    age: Age of the passenger (int)

    class_nb: In the case of train transportation, you have to specify the class, either 1 or 2
        Defaults to 0 which means it's irrelevant (e.g. in a bus) (int)

    is_one_way: Whether the ticket is a one way ticket or include the return trip (bool)

    Returns
    -------
    The price of a ticket in [€] (float)
    """
    pass


def bus(age: str,
        is_one_way: bool) -> float:
    """Sub-function managing bus tickets
    Parameters
    ----------
    age: Age of the passenger (int)

    is_one_way: Whether the ticket is a one way ticket or include the return trip (bool)

    Returns
    -------
    The price of a ticket in [€] (float)
    """
    pass


def subway(age: int) -> float:
    """Sub-function managing subway tickets
    Parameters
    ----------
    age: Age of the passenger (int)

    Returns
    -------
    The price of a ticket in [€] (float)
    """
    pass


